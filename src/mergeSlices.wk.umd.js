!function(I,C){"object"==typeof exports&&"undefined"!=typeof module?module.exports=C(require("worker_threads")):"function"==typeof define&&define.amd?define(["worker_threads"],C):(I="undefined"!=typeof globalThis?globalThis:I||self).mergeSlices=C(I.worker_threads)}(this,(function(I){"use strict";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var C={};return function(C,d){C.exports=function(I){var C={};!function(I){var C=Object.prototype.hasOwnProperty,d="~";function c(){}function l(I,C,d){this.fn=I,this.context=C,this.once=d||!1}function g(I,C,c,g,i){if("function"!=typeof c)throw new TypeError("The listener must be a function");var m=new l(c,g||I,i),n=d?d+C:C;return I._events[n]?I._events[n].fn?I._events[n]=[I._events[n],m]:I._events[n].push(m):(I._events[n]=m,I._eventsCount++),I}function i(I,C){0==--I._eventsCount?I._events=new c:delete I._events[C]}function m(){this._events=new c,this._eventsCount=0}Object.create&&(c.prototype=Object.create(null),(new c).__proto__||(d=!1)),m.prototype.eventNames=function(){var I,c,l=[];if(0===this._eventsCount)return l;for(c in I=this._events)C.call(I,c)&&l.push(d?c.slice(1):c);return Object.getOwnPropertySymbols?l.concat(Object.getOwnPropertySymbols(I)):l},m.prototype.listeners=function(I){var C=d?d+I:I,c=this._events[C];if(!c)return[];if(c.fn)return[c.fn];for(var l=0,g=c.length,i=new Array(g);l<g;l++)i[l]=c[l].fn;return i},m.prototype.listenerCount=function(I){var C=d?d+I:I,c=this._events[C];return c?c.fn?1:c.length:0},m.prototype.emit=function(I,C,c,l,g,i){var m=d?d+I:I;if(!this._events[m])return!1;var n,X,b=this._events[m],o=arguments.length;if(b.fn){switch(b.once&&this.removeListener(I,b.fn,void 0,!0),o){case 1:return b.fn.call(b.context),!0;case 2:return b.fn.call(b.context,C),!0;case 3:return b.fn.call(b.context,C,c),!0;case 4:return b.fn.call(b.context,C,c,l),!0;case 5:return b.fn.call(b.context,C,c,l,g),!0;case 6:return b.fn.call(b.context,C,c,l,g,i),!0}for(X=1,n=new Array(o-1);X<o;X++)n[X-1]=arguments[X];b.fn.apply(b.context,n)}else{var Z,t=b.length;for(X=0;X<t;X++)switch(b[X].once&&this.removeListener(I,b[X].fn,void 0,!0),o){case 1:b[X].fn.call(b[X].context);break;case 2:b[X].fn.call(b[X].context,C);break;case 3:b[X].fn.call(b[X].context,C,c);break;case 4:b[X].fn.call(b[X].context,C,c,l);break;default:if(!n)for(Z=1,n=new Array(o-1);Z<o;Z++)n[Z-1]=arguments[Z];b[X].fn.apply(b[X].context,n)}}return!0},m.prototype.on=function(I,C,d){return g(this,I,C,d,!1)},m.prototype.once=function(I,C,d){return g(this,I,C,d,!0)},m.prototype.removeListener=function(I,C,c,l){var g=d?d+I:I;if(!this._events[g])return this;if(!C)return i(this,g),this;var m=this._events[g];if(m.fn)m.fn!==C||l&&!m.once||c&&m.context!==c||i(this,g);else{for(var n=0,X=[],b=m.length;n<b;n++)(m[n].fn!==C||l&&!m[n].once||c&&m[n].context!==c)&&X.push(m[n]);X.length?this._events[g]=1===X.length?X[0]:X:i(this,g)}return this},m.prototype.removeAllListeners=function(I){var C;return I?(C=d?d+I:I,this._events[C]&&i(this,C)):(this._events=new c,this._eventsCount=0),this},m.prototype.off=m.prototype.removeListener,m.prototype.addListener=m.prototype.on,m.prefixed=d,m.EventEmitter=m,I.exports=m}({get exports(){return C},set exports(I){C=I}});var d=C;let c;!function(){if("nodejs"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;let C=(l="",Buffer.from(l,"base64").toString("utf8"));var l;function g(){let c=new d,l=function(C){try{return new I.Worker(C,{eval:!0})}catch(I){i(I)}}(C);if(!l)return i("invalid worker"),null;function g(){let I=function(){let I,C,d=new Promise((function(){I=arguments[0],C=arguments[1]}));return d.resolve=I,d.reject=C,d}(),C=function(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,C=[],d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),c=d.length;for(let l=0;l<I;l++)C[l]=d[0|Math.random()*c];return C.join("")}(),d={mode:"call",id:C,fun:"main",input:[...arguments]};return l.postMessage(d),c.once(C,(C=>{"success"===C.state?I.resolve(C.msg):I.reject(C.msg)})),I}function i(I){c.emit("error",I)}return l.on("message",(function(I){let C=I,d=C.mode;"emit"!==d&&"return"!==d||("emit"===d&&c.emit(C.evName,C.msg),"return"===d&&c.emit(C.id,C))})),l.on("error",i),l.on("exit",(I=>{1!==I&&i("exit code["+I+"] !== 1")})),function(){let I={mode:"init",type:"function",input:[...arguments]};l.postMessage(I)}([...arguments]),c.main=g,c.main=g,c.terminate=function(){l?(l.terminate(),l=void 0):i("worker has been terminated")},c}c=async function(){let I=[...arguments],C=g();return await C.main(...I).finally((()=>{C.terminate()}))}}();try{process.on("unhandledRejection",(I=>{console.log("outer:unhandledRejection",I)})),process.on("uncaughtException",(I=>{console.log("outer:uncaughtException",I)})),process.on("uncaughtExceptionMonitor",(I=>{console.log("outer:uncaughtExceptionMonitor",I)}))}catch(I){}return c}(I)}({get exports(){return C},set exports(I){C=I}}),C}));
